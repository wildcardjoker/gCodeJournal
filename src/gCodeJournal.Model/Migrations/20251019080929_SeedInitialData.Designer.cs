// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gCodeJournal.Model;

#nullable disable

namespace gCodeJournal.Model.Migrations
{
    [DbContext(typeof(GCodeJournalDbContext))]
    [Migration("20251019080929_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("gCodeJournal.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("gCodeJournal.Model.Filament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CostPerWeight")
                        .HasColumnType("TEXT");

                    b.Property<int>("FilamentColourId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilamentTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PrintingProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductId")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReorderLink")
                        .HasMaxLength(2083)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FilamentColourId");

                    b.HasIndex("FilamentTypeId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("PrintingProjectId");

                    b.ToTable("Filaments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostPerWeight = 19.95m,
                            FilamentColourId = 2,
                            FilamentTypeId = 1,
                            ManufacturerId = 1
                        },
                        new
                        {
                            Id = 2,
                            CostPerWeight = 19.95m,
                            FilamentColourId = 1,
                            FilamentTypeId = 1,
                            ManufacturerId = 1
                        });
                });

            modelBuilder.Entity("gCodeJournal.Model.FilamentColour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FilamentColours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Black"
                        },
                        new
                        {
                            Id = 2,
                            Description = "White"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Red"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Dark Blue"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Light Blue"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Light Green"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Sea Green"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Yellow"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Purple"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Orange"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Pink"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Space Grey"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Silver"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Translucent"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Brown"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Wood"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Marble"
                        });
                });

            modelBuilder.Entity("gCodeJournal.Model.FilamentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FilamentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "PLA"
                        },
                        new
                        {
                            Id = 2,
                            Description = "ABS"
                        },
                        new
                        {
                            Id = 3,
                            Description = "PETG"
                        },
                        new
                        {
                            Id = 4,
                            Description = "TPU"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Nylon"
                        },
                        new
                        {
                            Id = 6,
                            Description = "ASA"
                        });
                });

            modelBuilder.Entity("gCodeJournal.Model.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Elegoo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Esun"
                        },
                        new
                        {
                            Id = 3,
                            Name = "SUNLU"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Flashforge"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bambu Lab"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Polymaker"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Creality"
                        });
                });

            modelBuilder.Entity("gCodeJournal.Model.ModelDesign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Length")
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ModelDesigns");
                });

            modelBuilder.Entity("gCodeJournal.Model.PrintingProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Completed")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilamentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModelDesignId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Submitted")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ModelDesignId");

                    b.ToTable("PrintingProjects");
                });

            modelBuilder.Entity("gCodeJournal.Model.Filament", b =>
                {
                    b.HasOne("gCodeJournal.Model.FilamentColour", "Colour")
                        .WithMany("Filaments")
                        .HasForeignKey("FilamentColourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gCodeJournal.Model.FilamentType", "Type")
                        .WithMany("Filaments")
                        .HasForeignKey("FilamentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gCodeJournal.Model.Manufacturer", "Manufacturer")
                        .WithMany("Filaments")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gCodeJournal.Model.PrintingProject", null)
                        .WithMany("Filaments")
                        .HasForeignKey("PrintingProjectId");

                    b.Navigation("Colour");

                    b.Navigation("Manufacturer");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("gCodeJournal.Model.PrintingProject", b =>
                {
                    b.HasOne("gCodeJournal.Model.Customer", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gCodeJournal.Model.ModelDesign", "Model")
                        .WithMany()
                        .HasForeignKey("ModelDesignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("gCodeJournal.Model.Customer", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("gCodeJournal.Model.FilamentColour", b =>
                {
                    b.Navigation("Filaments");
                });

            modelBuilder.Entity("gCodeJournal.Model.FilamentType", b =>
                {
                    b.Navigation("Filaments");
                });

            modelBuilder.Entity("gCodeJournal.Model.Manufacturer", b =>
                {
                    b.Navigation("Filaments");
                });

            modelBuilder.Entity("gCodeJournal.Model.PrintingProject", b =>
                {
                    b.Navigation("Filaments");
                });
#pragma warning restore 612, 618
        }
    }
}
